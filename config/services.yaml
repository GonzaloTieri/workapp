# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    tokenkey: 'w0rkappT0k3nK3y'
    fbAppId: '242197353098849'
    fbSecretKey: '8f55ea3921529e3084f1aaf7aee93721'
    #googleAppId: '671044463266-g4r115kl5fg1jokunvm1c51629qjnf68.apps.googleusercontent.com'
    #googleSecretKey: 'L3YFIasy-t3Kqv3qJc6amTZP'

    googleClientSecret: 'NUrEU_PdNsRuWqMD51mhiWqF'
    googleClientId: '1087628520029-ppa64srr3eaa6e7i6lokqh8h7mkarv5m.apps.googleusercontent.com'
    googleApiKey: 'AIzaSyDifAGjtI9wiLafIySeppjNFCPgwAd92J4'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
